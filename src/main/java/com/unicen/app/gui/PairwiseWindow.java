package com.unicen.app.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.unicen.app.indicators.Factory;
import com.unicen.app.indicators.Indicator;

import javax.swing.*;


import javax.swing.table.DefaultTableModel;

import java.awt.*;

import java.util.*;
import java.util.List;

/**
 * Created by Alfonso on 30/7/16.
 */
public class PairwiseWindow {
    private JPanel pairwisePanel;
    private JButton confirmButton;
    private JTabbedPane tabbedPane1;
    private JTable editableMatrix;
    private JTextPane helpText;
    private List<String> selected;
    private MainWindow mainWindow;



    public PairwiseWindow (MainWindow mw, CheckBoxList checkBoxList) {
        this.selected = checkBoxList.choosenValues();
        this.mainWindow = mw;
    }
    public void main () {
        JFrame frame = new JFrame("PairwiseWindow");
        frame.setMinimumSize(new java.awt.Dimension(300,300));
        frame.setContentPane(pairwisePanel);
        frame.pack();
        frame.setVisible(true);
        helpText.setCaretPosition(0);

        int n = selected.size()+1;
        MatrixModel tableModel = new MatrixModel(n,n);


        tableModel.setRowCount(n);
        tableModel.setColumnCount(n);

        for (int i=1; i<n;i++) {
            tableModel.setValueAt(selected.get(i-1),0,i);
            tableModel.setValueAt(selected.get(i-1),i,0);
        }


        editableMatrix.setModel(tableModel);

        for (int i=1; i<n; i++)
            for (int j=1; j<n; j++) {
                if (i==j) {
                    tableModel.setValueAt(1, i, j);
                    tableModel.setCellEditable(i, j, false);
                } else
                    if (i>j) {
                        tableModel.setCellEditable(i,j, false);
                    } else {
                        tableModel.setCellEditable(i,j,true);

                    }

            }

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        confirmButton = new JButton();
        editableMatrix = new JTable();
        //comparisonContainer = new JScrollPane();
        //comparisonContainer.setViewportView(editableMatrix);

        confirmButton.addActionListener(actionEvent -> {

            //chequear la matriz

            /*Si est√° correcta*/


            List<Indicator> indicators = new ArrayList<Indicator>();
            for (String indicator : selected) {
                indicators.add(Factory.get(indicator));
            }

            int n=selected.size();

            double[][] indicatorsMatrix = new double[n][n];


            //copiar los valores que ingreso el usuario a la matriz

            //Prueba
            for (int i = 1; i <= n; i++)
                for (int j = 1; j <= n; j++) {
                    Double value = Double.parseDouble(editableMatrix.getModel().getValueAt(i,j).toString());
                    indicatorsMatrix[i-1][j-1] = value.doubleValue();
                }

            //mainWindow.showAHPResults(indicators, indicatorsMatrix);

        });

    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        pairwisePanel = new JPanel();
        pairwisePanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        confirmButton.setText("Confirm");
        pairwisePanel.add(confirmButton, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        pairwisePanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pairwisePanel;
    }
}
